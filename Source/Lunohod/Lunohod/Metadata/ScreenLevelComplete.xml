<?xml version="1.0" encoding="UTF-8"?>

<Screen Bounds="0,0,480,320" IsModal="true">
    <Include File="CommonScreenFunctionality.xml" />

    <Include File="ClassUIMovingBackground.xml" />
    <Include File="ClassUIButton.xml" />
    <Include File="ClassUILevelNumberPanel.xml" />

    <Resources RootFolder="Global">
        <Texture Id="txrBackground" Source="scr_victory_bg" />
        <Texture Id="txrStars" Source="scr_victory_stars" />
        <Texture Id="txrAlarm" Source="scr_victory_alarm" />
        <Texture Id="txrHeart" Source="scr_victory_heart" />
        <Texture Id="txrBadge" Source="scr_victory_badge" />
        <Texture Id="txrBadgeGlow" Source="scr_victory_badge_glow" />
        <Texture Id="txrStamp" Source="scr_victory_stamp" />
        
        <Font Id="fntSystem" Source="Splash14Font"/>
    </Resources>

    <Layer Id="background">
        <Image TextureId="txrBackground" />
    </Layer>
    
	<Layer Id="lyrControls">
		<Group Id="grpLevelNumberPanel" Bounds="25,15,100,100" Class="clsLevelNumberPanel"/>
		<Group Id="btnRestart" Class="clsButton" ClassParams="@BtnImg=restart" Bounds="40, 190, 62, 62">
		    <BoolTrigger Condition="btnRestart:Action" EnterAction="system.CloseCurrentScreen();system.RestartLevel();" />
		</Group>
		<Group Id="btnHome" Class="clsButton" ClassParams="@BtnImg=exit" Bounds="40, 256, 62, 62">
		    <BoolTrigger Condition="btnHome:Action" EnterAction="system.CloseCurrentScreen();system.AbandonLevel();" />
		</Group>
		<Group Id="btnNextLevel" Class="clsButton" ClassParams="@BtnImg=forwind" Bounds="380, 256, 62, 62">
		    <BoolTrigger Condition="btnNextLevel:Action" EnterAction="system.CloseCurrentScreen();system.StartNextLevel();" />
		</Group>
	</Layer>

	<Layer>
		<!-- We'll use this group's X attribute to animate score. It's a hack, because we can't animate variables (yet) -->
		<Group Id="dispScore" />
		<Do Action="
			levelScore.Score = hero.Score; levelScore.Health = hero.Health; levelScore.Time = hero.Time;
			@isNewScore=levelScore.IsNewScore;
			levelScore.Save();
			" InProgress="true" />

		<!-- Text and graphics -->
		<Text FontId="fntSystem" Text="=system.Str(system.Round(dispScore.X))" Location="210, 195" />

		<Sprite Id="sprStar1" TextureId="txrStars" Bounds="200,218,33,36" FrameBounds="0,0,33,36" FrameCount="3" CurrentFrame="0" Enabled="false" />
		<Sprite Id="sprStar2" TextureId="txrStars" Bounds="232,215,31,36" FrameBounds="0,0,33,36" FrameCount="3" CurrentFrame="1" Enabled="false" />
		<Sprite Id="sprStar3" TextureId="txrStars" Bounds="262,217,31,36" FrameBounds="0,0,33,36" FrameCount="3" CurrentFrame="2" Enabled="false" />
		<Image Id="imgAlarm" TextureId="txrAlarm" Location="206,238" Enabled="false" />
		<Image Id="imgHeart" TextureId="txrHeart" Location="245,253" Enabled="false" />
		<Image Id="imgBadgeGlow" TextureId="txrBadgeGlow" Location="279,162" Enabled="false" />
		<Image Id="imgBadge" TextureId="txrBadge" Location="276,182" Enabled="false" />
		<Image Id="imgStamp" TextureId="txrStamp" Location="310,8" Enabled="false" />

		<!-- Start score animation -->
		<SequenceSet Id="setScoreAnimations" InProgress="true">
			<NumAnimation Id="anmScore" Target="dispScore.X" From="0" To="levelScore.TotalScore" Duration="3" RepeatCount="1" Fill="Hold"/>
			<!--
			<NumAnimation Id="anmTimeBonus" Target="dispScore.X" From="levelScore.Score" To="levelScore.Score+levelScore.TimeBonus" Duration="1" RepeatCount="1" Fill="Hold" />
			<NumAnimation Id="anmHealthBonus" Target="dispScore.X" From="levelScore.Score+levelScore.TimeBonus" To="levelScore.TotalScore" Duration="1" RepeatCount="1" Fill="Hold" />
			-->
		</SequenceSet>
		
		<!-- Sets that responsible for animating stars, and the badges -->
		<ParallelSet Id="setStar1">
			<Do Action="sprStar1.Enabled=true" />
			<NumAnimation Target="sprStar1.Scale" From="2" To="1" Duration="0.5" Fill="Hold" />
		</ParallelSet>
		<ParallelSet Id="setStar2">
			<Do Action="sprStar2.Enabled=true" />
			<NumAnimation Target="sprStar2.Scale" From="2" To="1" Duration="0.5" Fill="Hold" />
		</ParallelSet>
		<ParallelSet Id="setStar3">
			<Do Action="sprStar3.Enabled=true" />
			<NumAnimation Target="sprStar3.Scale" From="2" To="1" Duration="0.5" Fill="Hold" />
		</ParallelSet>
		<ParallelSet Id="setAlarm">
			<Do Action="imgAlarm.Enabled=true" />
		</ParallelSet>
		<ParallelSet Id="setHeart">
			<Do Action="imgHeart.Enabled=true" />
		</ParallelSet>
		<ParallelSet Id="setBadge">
			<Do Action="imgBadgeGlow.Enabled=true" />
			<Do Action="imgBadge.Enabled=true" />
		</ParallelSet>
		<ParallelSet Id="setStamp">
			<Do Action="imgStamp.Enabled=true" />
		</ParallelSet>
		
		

		<BoolTrigger Condition="(dispScore.X/levelScore.AvailablePoints) >= levelScore.StarScoreRatio1" EnterAction="setStar1.Start()" />
		<BoolTrigger Condition="(dispScore.X/levelScore.AvailablePoints) >= levelScore.StarScoreRatio2" EnterAction="setStar2.Start()" />
		<BoolTrigger Condition="(dispScore.X/levelScore.AvailablePoints) >= levelScore.StarScoreRatio3" EnterAction="setStar3.Start()" />
		<BoolTrigger Condition="(levelScore.TimeBonus > 0) and (dispScore.X > levelScore.Score)" EnterAction="setAlarm.Start()" />
		<BoolTrigger Condition="(levelScore.HealthBonus > 0) and (dispScore.X > (levelScore.Score + levelScore.TimeBonus))" EnterAction="setHeart.Start()" />
		<BoolTrigger Condition="(not setScoreAnimations.InProgress) and levelScore.HasBadge" EnterAction="setBadge.Start()" />
		<BoolTrigger Condition="(not setScoreAnimations.InProgress) and (not setBadge.InProgress) and @isNewScore" EnterAction="setStamp.Start()" />
	</Layer>
</Screen>