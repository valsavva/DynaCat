<!--<Level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="file:///D:/Lunohod/Documentation/schema0.xsd" Name="S02LXX_Trenazher" Bounds="0, 0, 480, 320">-->
<Include>

	<Resources RootFolder="Sound">
		<SoundFile Id="sndHeroDying" Source="skeletonFX_crash_1"/>
		<SoundFile Id="sndHeroEating1" Source="skeletonFX_hero_eating_1"/>
		<SoundFile Id="sndHeroEating2" Source="skeletonFX_hero_eating_2"/>
		<SoundFile Id="sndHeroEating3" Source="skeletonFX_hero_eating_3"/>
		<SoundFile Id="sndHeroEating4" Source="skeletonFX_hero_eating_4"/>
        <SoundFile Id="sndHeroEatingChavk1" Source="skeletonFX_hero_eating_chavk1"/>
        <SoundFile Id="sndHeroEatingChavk2" Source="skeletonFX_hero_eating_chavk2"/>
        <SoundFile Id="sndHeroBounce1" Source="skeletonFX_hero_metal_wall_1"/>
		<SoundFile Id="sndHeroBounce2" Source="skeletonFX_hero_metal_wall_2"/>
        <SoundFile Id="sndHeroStick1" Source="skeletonFX_hero_wooden_wall_1"/>
        <SoundFile Id="sndHeroStick2" Source="skeletonFX_hero_wooden_wall_2"/>
        <SoundFile Id="sndTeleportIn" Source="demo_fx_port_in"/>
        <SoundFile Id="sndTeleportOut" Source="demo_fx_port_out"/>
        <SoundFile Id="sndTeleportCont" Source="demo_fx_port_cont"/>
    </Resources>
	
    <Resources RootFolder="Textures">
        <Texture Id="txrHeroDefault" Source="Cat_0000_norm"/>
        <!--<Texture Id="txrHeroEating" Source="cat_var_eat"/>-->
        <Texture Id="txrHeroEating" Source="Cat_eat_Spr_100x100x3"/>
        <Texture Id="txrHeroGottaEShock" Source="Cat_lightning_Spr_100x100x3"/>
        <Texture Id="txrHeroDying" Source="Cat_0000_norm"/>
        <Texture Id="txrHeroGottaDamage" Source="Cat_0000_norm"/>
        <Texture Id="txrHeroWaitingExplosion" Source="Cat_0000_norm"/>
        <Texture Id="txrHeroGoodExplosion" Source="Cat_smile0001"/>
        <Texture Id="txrHeroBadExplosion" Source="Cat_eats0002"/>
        <Texture Id="txrHeroScareLeft" Source="Cat_scare_left_Spr_100x100x3"/>
        <Texture Id="txrHeroScareRight" Source="Cat_scare_right_Spr_100x100x3"/>
        <Texture Id="txrHeroScareLeftRight" Source="Cat_scare_leftright_Spr_100x100x6"/>
        <Texture Id="txrHeroSurprised" Source="Cat_0000_norm"/>
        <Texture Id="txrHeroExit" Source="Cat_0000_norm"/>
    </Resources>

	<Class Id="clsHero">
		<Hero Speed="0" Direction="0,0" Deceleration="0">
            <Include File="includeSkeletonHeroMotions.xml"/>
		
<!-- Init -->

         	<Do InProgress="true" RepeatCount="1"  Action="
                @heroDepartPointX=0;
                @heroDepartPointY=0;
                @heroDestPointX=0;
                @heroDestPointY=0;
                hero.Width=31;
                hero.Height=24"/>
            
<!-- States 

            hero.IsDead         : /major/ hero dying
            sttExit             : /major/ hero reached exit
            sttElecticShock     : /major/ gotta electic shock
            sttEating           : /major/ eating
            sttGottaDamage      : /major/ gotta damage
            
            sttWaitingExplosion : /minor/ hero fire a bomb
            sttGoodExplosion    : /minor/ explosion - good one!
            sttBadExplosion     : /minor/ explosion - bad
            OnOilMotion         : /minor/ hero on the Oil
            Magneted            : /minor/ beamed by magnet waves
            -->
            

            <!-- hero.IsDead : /major/ hero dying -->
            <BoolTrigger Condition="hero.IsDead" 
                         EnterAction="hero.SetTransaction(false, false, false);
                         anmHeroDying.Start()"
                         StayTriggered="true"
                         Group="sttHeroStates">
                <Image Id="imgHeroDying" TextureId="txrHeroDying" Bounds="-33, -46, 100, 100"/>
            </BoolTrigger>
            
            <SequenceSet Id="anmHeroDying">
                <NumAnimation Duration="0.1" Target="imgHeroDying.Opacity" Autoreverse="true" From="1" To="0" RepeatCount="5"/>
                <Do Action="system.StartScreen('ScreenLevelFailed.xml')"/>
            </SequenceSet>
            
            
            <!-- sttExit : /major/ hero reached exit -->
            <BoolTrigger Condition="hero:sttExit" 
                         EnterAction="hero.SetTransaction(false, false, false);
                         anmHeroExit.Start()"
                         StayTriggered="true"
                         Group="sttHeroStates">
                <Image TextureId="txrHeroExit" Bounds="-33, -46, 100, 100"/>
            </BoolTrigger>
            
            <SequenceSet Id="anmHeroExit" RepeatCount="1">
                <Delay Duration="0.3" />
                <NumAnimation Target="hero.X,hero.Y,hero.Opacity" From="@heroDepartPointX,@heroDepartPointY,1" To="@heroDestPointX,@heroDestPointY,0" Duration="0.5" InProgress="true" RepeatCount="1" Fill="End"/>
                <Do Action="hero.X=-7777777;hero.Y=-7777777" />
            </SequenceSet>
                        

            <!-- sttElecticShock : /major/ gotta electic shock -->
            <BoolTrigger Condition="hero:sttElecticShock" 
                         EnterAction="anmElecticShock.Start();
                         hero:-sttEating;hero:-sttGoodExplosion"
                         ExitAction="anmElecticShock.Stop()"
                         Group="sttHeroStates">
                <Sprite Id="sprHeroGottaEShock" TextureId="txrHeroGottaEShock" Bounds="-33, -46, 100, 100"  FrameBounds="0,0,100,100" FrameCount="3"/>
            </BoolTrigger>

            <SequenceSet Id="anmElecticShock" RepeatCount="1">
                <NumAnimation From="0" To="2" Duration="0.5" Target="sprHeroGottaEShock.CurrentFrame" RepeatCount="1" Fill="End"/>
                <Do Action="hero:-sttElecticShock" />
            </SequenceSet>

            <!-- sttGottaDamage : /major/ gotta damage -->
            <BoolTrigger Condition="hero:sttGottaDamage"
                         EnterAction="anmHeroGottaDamage.Start();
                         hero:-sttEating;hero:-sttGoodExplosion"
                         ExitAction="anmHeroGottaDamage.Stop()"
                         Group="sttHeroStates">
                <Image TextureId="txrHeroGottaDamage" Bounds="-33, -46, 100, 100" BackColor="#770000"/>
            </BoolTrigger>
            
            <NumAnimation Id="anmHeroGottaDamage" Target="hero.Opacity" From="1" To="0" Duration="0.2" Autoreverse="true" Fill="End" RepeatCount="5" />
            

            <!-- sttEating : /major/ eating -->
            <BoolTrigger Condition="hero:sttEating" 
                         EnterAction="anmHeroEating.Start()" 
                         ExitAction="anmHeroEating.Stop()"
                         Group="sttHeroStates">
                <Sprite Id="sprHeroEating" TextureId="txrHeroEating" Bounds="-33, -46, 100, 100"  FrameBounds="0,0,100,100" FrameCount="3"/>
            </BoolTrigger>
            <SequenceSet Id="anmHeroEating" RepeatCount="1">
                <NumAnimation From="0" To="2" Duration="0.5" Target="sprHeroEating.CurrentFrame" RepeatCount="1" Fill="End"/>
                <RandomSet>
                    <Do Action="hero:Chavk" />
                    <Do Action="hero:-Chavk" />
                </RandomSet>
                <RandomSet>
                    <Delay Duration="0.1" />
                    <Delay Duration="0.25" />
                    <Delay Duration="0.4" />
                </RandomSet>
                <Do Action="hero:-sttEating" />
            </SequenceSet>


            <!-- sttWaitingExplosion : /minor/ hero fire a bomb -->
            <BoolTrigger Condition="hero:sttWaitingExplosion" 
                         Group="sttHeroStates">
                <Image TextureId="txrHeroWaitingExplosion" Bounds="-33, -46, 100, 100"/>
            </BoolTrigger>

            <!-- sttGoodExplosion : /minor/ explosion - good one! -->
            <BoolTrigger Condition="hero:sttGoodExplosion" 
                         EnterAction="anmGoodExplosion.Start()" 
                         ExitAction="anmGoodExplosion.Stop()"
                         Group="sttHeroStates">
                <Image TextureId="txrHeroGoodExplosion" Bounds="-33, -46, 100, 100"/>
            </BoolTrigger>
            <SequenceSet Id="anmGoodExplosion">
                <Delay Duration="1" />
                <Do Action="hero:-sttGoodExplosion" />
            </SequenceSet>

            <!-- sttBadExplosion : /minor/ explosion - bad -->
            <BoolTrigger Condition="hero:sttBadExplosion" 
                         EnterAction="anmBadExplosion.Start()"
                         ExitAction="anmBadExplosion.Stop()"
                         Group="sttHeroStates">
                <Image TextureId="txrHeroBadExplosion" Bounds="-33, -46, 100, 100"/>
            </BoolTrigger>
            <SequenceSet Id="anmBadExplosion">
                <Delay Duration="1" />
                <Do Action="hero:-sttBadExplosion" />
            </SequenceSet>            
            
            <!-- OnOilMotion : /minor/ hero on the Oil -->
            <BoolTrigger Condition="hero:OnOilMotion" 
                         EnterAction="anmOnOilMotion.Start()"
                         ExitAction="anmOnOilMotion.Stop()"
                         Group="sttHeroStates" >
                <Sprite Id="sprHeroScareLeftRight" TextureId="txrHeroScareLeftRight" Bounds="-33, -46, 100, 100"  FrameBounds="0,0,100,100" FrameCount="6"/>
            </BoolTrigger>
            <SequenceSet Id="anmOnOilMotion" RepeatCount="0">
                <NumAnimation From="0" To="5" Duration="0.8" Target="sprHeroScareLeftRight.CurrentFrame" RepeatCount="1" Fill="End"/>
            </SequenceSet>

            <!-- Magneted : /minor/ beamed by magnet waves -->
            <BoolTrigger Condition="hero:Magneted" Group="sttHeroStates" >
                <Image Id="imgHeroSurprised" TextureId="txrHeroSurprised" Bounds="-33, -46, 100, 100"/>
            </BoolTrigger>

            <BoolTrigger Condition="hero:Magneted and not hero:Magneting" 
                         EnterAction="setHeroSurQuake.Start()" 
                         ExitAction="setHeroSurQuake.Stop();setHeroSurQuakeEnd.Start()" />
            <SequenceSet Id="setHeroSurQuake" RepeatCount="0">
                <NumAnimation Target="imgHeroSurprised.X" From="0" To="-3" Duration="0.08" Fill="End" IsDelta="true" RepeatCount="1"/>
                <NumAnimation Target="imgHeroSurprised.X" From="-3" To="3" Duration="0.08" Fill="End" IsDelta="true" Autoreverse="true" RepeatCount="0"/>
            </SequenceSet>

            <NumAnimation Id="setHeroSurQuakeEnd" Target="imgHeroSurprised.X" From="imgHeroSurprised.X" To="-33" Duration="0.08" Fill="End" IsDelta="false" RepeatCount="1"/>

            
            <!-- default -->
			<BoolTrigger Group="sttHeroStates">
                <Image TextureId="txrHeroDefault" Bounds="-33, -46, 100, 100"/>
			</BoolTrigger>

            
<!-- foley -->
            
            <!-- hero dying -->
            <BoolTrigger Condition="hero.IsDead"
                         EnterAction="sfxHeroDying.Start()">
            </BoolTrigger>
            
            <RandomSet Id="sfxHeroDying" RepeatCount="1">
                <Sound FileId="sndHeroDying" Volume="0.5" Pitch="0" Pan="0"/>
                <Sound FileId="sndHeroDying" Volume="0.5" Pitch="-0.03" Pan="0"/>
            </RandomSet>
            
            <!-- bounce -->
            <BoolTrigger Condition="hero:bounce" 
                         EnterAction="sfxHeroBounce.Start()"/>
            
            <RandomSet Id="sfxHeroBounce" RepeatCount="1">
				<Sound FileId="sndHeroBounce1" Volume="0.2" Pitch="0"/>
				<Sound FileId="sndHeroBounce2" Volume="0.2" Pitch="0"/>
				<Sound FileId="sndHeroBounce1" Volume="0.2" Pitch="-0.03"/>
				<Sound FileId="sndHeroBounce2" Volume="0.2" Pitch="-0.03"/>
			</RandomSet>

            <!-- stick -->
            <BoolTrigger Condition="hero:stick" 
                         EnterAction="sfxHeroStick.Start()"/>
            
            <RandomSet Id="sfxHeroStick" RepeatCount="1">
                <Sound FileId="sndHeroStick1" Volume="0.2" Pitch="0"/>
                <Sound FileId="sndHeroStick2" Volume="0.2" Pitch="0"/>
                <Sound FileId="sndHeroStick1" Volume="0.2" Pitch="0.1"/>
                <Sound FileId="sndHeroStick2" Volume="0.2" Pitch="0.1"/>
            </RandomSet>
            
            <!-- eating -->
            <BoolTrigger Condition="hero:sttEating" 
                         EnterAction="sfxHeroFoleyEating.Start()"/>
            
            <RandomSet Id="sfxHeroFoleyEating" RepeatCount="1">
                <Sound FileId="sndHeroEating1" Volume="0.5" Pitch="0"/>
                <Sound FileId="sndHeroEating2" Volume="0.5" Pitch="0"/>
                <Sound FileId="sndHeroEating3" Volume="0.5" Pitch="0"/>
                <Sound FileId="sndHeroEating4" Volume="0.5" Pitch="0"/>
                <Sound FileId="sndHeroEating1" Volume="0.5" Pitch="0.3"/>
                <Sound FileId="sndHeroEating2" Volume="0.5" Pitch="0.3"/>
                <Sound FileId="sndHeroEating3" Volume="0.5" Pitch="0.3"/>
                <Sound FileId="sndHeroEating4" Volume="0.5" Pitch="0.3"/>
            </RandomSet>

            <!-- chavk (finish of the eating) -->
            <BoolTrigger Condition="hero:Chavk" 
                         EnterAction="sfxHeroChavk.Start()"/>
            
            <RandomSet Id="sfxHeroChavk" RepeatCount="1">
                <Sound FileId="sndHeroEatingChavk1" Volume="0.5" Pitch="0"/>
                <Sound FileId="sndHeroEatingChavk2" Volume="0.5" Pitch="0"/>
                <Sound FileId="sndHeroEatingChavk1" Volume="0.5" Pitch="-0.1"/>
                <Sound FileId="sndHeroEatingChavk2" Volume="0.5" Pitch="0.1"/>
            </RandomSet>
            
            <!-- Teleport -->

            <BoolTrigger Condition="hero:sttPortIn" 
                         EnterAction="sfxPortIn.Start()" />
            
            <SequenceSet Id="sfxPortIn" RepeatCount="1">
                <Sound FileId="sndTeleportIn" Volume="0.5" Pitch="0"/>
            </SequenceSet>

            <BoolTrigger Condition="hero:sttPortCont" 
                         EnterAction="sfxPortCont.Play()" 
                         ExitAction="sfxPortCont.Pause()"/>
            <SequenceSet Id="sfxPortCont">
                <Sound FileId="sndTeleportCont" Volume="0.5" Pitch="0" IsLooped="true"/>
            </SequenceSet>

            <BoolTrigger Condition="hero:sttPortOut" 
                         EnterAction="sfxPortOut.Start()"/>
            <RandomSet Id="sfxPortOut">
                <Sound FileId="sndTeleportOut" Volume="0.5" Pitch="0"/>
                <Sound FileId="sndTeleportOut" Volume="0.5" Pitch="-0.1"/>
                <Sound FileId="sndTeleportOut" Volume="0.5" Pitch="0.1"/>
            </RandomSet>

        </Hero>
		
	</Class>

</Include>
