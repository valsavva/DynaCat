<?xml version="1.0" encoding="utf-8" ?>

<Include>
	
	<!-- =========================================================================================  -->
	<!-- clsHeroCursor -->
	<!-- =========================================================================================  -->
	
	<Class Id="clsHeroCursor">
		<Hero Speed="84" Direction="0,0">

			<BoolTrigger Id="something" When="this:something" InProgress="true" Group="heroStates">
				<Image TextureId="cursor_50x50_light_blue" />
			</BoolTrigger>
			
			<BoolTrigger Id="default" Group="heroStates">
				<Image TextureId="cursor_solid_50x50_blue" />
			</BoolTrigger>

		</Hero>
	</Class>

	<!-- =========================================================================================  -->
	<!-- clsAbr -->
	<!-- =========================================================================================  -->

	<Class Id="clsAbr">
		<Enemy>

			<!-- 
				Ура! Никаких стэйтов больше, просто триггеры.

			This approach is closest to what we had with "States". It is still very useful when 
				there is a single trigger checking a condition and then signaling an event.
				In other words, if the intersection trigger "global", defined in the main XML maybe,
				it would make the implementation more efficient (you have one trigger controlling states on multiple objects).
			-->
			<!--			
			<IntersectionTrigger ObjectId1="hero" ObjectId2="this" Action="this:escape" />
			
			<BoolTrigger Condition="this:escape" StayTriggered="true" Group="enemyStates">
				<Image TextureId="cursor_50x50_red">
					<RandomSet Probabilities="1,1,1,1" InProgress="true" >
						<NumAnimation From="0,0" To="-1000,0" Duration="10" Autoreverse="false" IsDelta="true" Target="this.X,this.Y" Fill="Hold" RepeatCount="1"/>
						<NumAnimation From="0,0" To="0,1000" Duration="9" Autoreverse="false" IsDelta="true" Target="this.X,this.Y" Fill="Hold" RepeatCount="1"/>
						<NumAnimation From="0,0" To="-1000,1000" Duration="9" Autoreverse="false" IsDelta="true" Target="this.X,this.Y" Fill="Hold" RepeatCount="1"/>
						<NumAnimation From="0,0" To="-1000,-1000" Duration="8" Autoreverse="false" IsDelta="true" Target="this.X,this.Y" Fill="Hold" RepeatCount="1"/>
					</RandomSet>
				</Image>
			</BoolTrigger>
			-->

			
			<!-- This is the new approach we're going to use - you can skip using Events altogether.
				Notice how here the RandomSet is set to be InProgress. It'll start rolling as soon
				as the trigger flips to true.
			-->
			<!--			
			<IntersectionTrigger ObjectId1="hero" ObjectId2="this" StayTriggered="true" Group="enemyStates">
				<Image TextureId="cursor_50x50_red">
					<RandomSet Probabilities="1,1,1,1" InProgress="true" >
						<NumAnimation From="0,0" To="-1000,0" Duration="10" Autoreverse="false" IsDelta="true" Target="this.X,this.Y" Fill="Hold" RepeatCount="1"/>
						<NumAnimation From="0,0" To="0,1000" Duration="9" Autoreverse="false" IsDelta="true" Target="this.X,this.Y" Fill="Hold" RepeatCount="1"/>
						<NumAnimation From="0,0" To="-1000,1000" Duration="9" Autoreverse="false" IsDelta="true" Target="this.X,this.Y" Fill="Hold" RepeatCount="1"/>
						<NumAnimation From="0,0" To="-1000,-1000" Duration="8" Autoreverse="false" IsDelta="true" Target="this.X,this.Y" Fill="Hold" RepeatCount="1"/>
					</RandomSet>
				</Image>
			</IntersectionTrigger>
			-->
			
			
			<!-- Finally, this is the best option. Notice that RandomSet gets started explicitly through the EnterAction in the trigger.
			-->
			<IntersectionTrigger ObjectId1="hero" ObjectId2="this" EnterAction="this_setMoves.Start;this_setRotations.Start" StayTriggered="true" Group="enemyStates">
			<Image TextureId="cursor_solid_10x10_black_red" Origin="-5,-5" Stretch="false" >
					<RandomSet Id="this_setMoves" Probabilities="1,1,1,1">
						<NumAnimation From="0,0" To="-1000,0" Duration="10" Autoreverse="false" IsDelta="true" Target="this.X,this.Y" Fill="Hold" RepeatCount="1"/>
						<NumAnimation From="0,0" To="0,1000" Duration="9" Autoreverse="false" IsDelta="true" Target="this.X,this.Y" Fill="Hold" RepeatCount="1"/>
						<NumAnimation From="0,0" To="-1000,1000" Duration="9" Autoreverse="false" IsDelta="true" Target="this.X,this.Y" Fill="Hold" RepeatCount="1"/>
						<NumAnimation From="0,0" To="-1000,-1000" Duration="8" Autoreverse="false" IsDelta="true" Target="this.X,this.Y" Fill="Hold" RepeatCount="1"/>
					</RandomSet>
					<RandomSet Id="this_setRotations">
						<NumAnimation From="0" To="360" Duration="0.8" Autoreverse="false" Target="this.Rotation"/>
						<NumAnimation From="360" To="0" Duration="1.6" Autoreverse="false" Target="this.Rotation"/>
					</RandomSet>
				</Image>
					<!-- Uncomment this for fun :) -->
				<!-- <NumTrigger Property="hero.X" Compare="G" Value="330" EnterAction="this_setMoves.Pause" ExitAction="this_setMoves.Resume" /> -->
			</IntersectionTrigger>
			
			<BoolTrigger Id="this_default" Group="enemyStates">	
 				<Image Id="this_imgN2" TextureId="cursor_solid_10x10_black_green" />
			</BoolTrigger>	
	</Enemy>	
	</Class>
</Include>