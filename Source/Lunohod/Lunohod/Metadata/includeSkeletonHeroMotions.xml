<!--<Level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="file:///D:/Lunohod/Documentation/schema0.xsd" Name="AlphaTest4" Bounds="0, 0, 480, 320">-->
<Include>
	<Resources RootFolder="Global">
		<Texture Id="blank" Source="blank"/>
		<Font Id="SystemFont" Source="SystemFont"/>
	</Resources>
    
    <!--<BoolTrigger Condition="hero:Tunneling">
        <Text FontId="SystemFont" Location="10,25"  Text="'Tunneling'" Color="#000000" />
    </BoolTrigger>
    
    <Text Id="txtValue1" FontId="SystemFont" Location="0,25"  Text="=''+system.Str(system.Round(hero.Speed))" Color="#000000" />
	<BoolTrigger Condition="hero:stick">
	    <Text FontId="SystemFont" Location="10,25"  Text="'***********STICK***************'" Color="#000000" />
	</BoolTrigger>-->
    
	<!-- 	
    <Text Id="txtValue1" FontId="SystemFont" Location="0,25"  Text="='(' + system.Str(@heroSpeed1) + ')(' + system.Str(@heroTime4) + ') ' + system.Str(system.Round(hero.Speed))" Color="#000000" />
    <Text Id="txtValue2" FontId="SystemFont" Location="0,34"  Text="='(' + system.Str(system.Round(hero.X)) + ')(' + system.Str(system.Round(hero.Y)) + ')'" Color="#000000" />
    -->
	
	<!-- Global variables. Will be moved out here. 
	<Do Action="@heroBaseSpeed=60;@heroBaseTime=3.95;" InProgress="true"/>
	
	<Do Id="doNormalSpeed" Action="
			@heroTime1=@heroBaseTime/20;@heroTime2=@heroBaseTime/10;@heroTime3=@heroBaseTime/2;@heroTime4=@heroBaseTime;
			@heroSpeed1=@heroBaseSpeed;@heroSpeed2=@heroBaseSpeed*2.2;@heroSpeed3=@heroBaseSpeed*2;@heroSpeed4=@heroBaseSpeed*1;"
			InProgress="true"
	/>
	<Do Id="doBolotoSpeed" Action="
			@heroTime1=@heroBaseTime/40;@heroTime2=@heroBaseTime/20;@heroTime3=@heroBaseTime/4;@heroTime4=@heroBaseTime/2;
			@heroSpeed1=@heroBaseSpeed*0.5;@heroSpeed2=@heroBaseSpeed*1.1;@heroSpeed3=@heroBaseSpeed*1;@heroSpeed4=@heroBaseSpeed*0.5;" />
	-->
	
	<!-- this should not belong to any group -->
<!--	<BoolTrigger Condition="hero:InBoloto" EnterAction="doBolotoSpeed.Start()" ExitAction="doNormalSpeed.Start()"/>

	<BoolTrigger Condition="hero:OnIce" EnterAction="anmDeceleration.Pause()" ExitAction="anmDeceleration.Resume()" />-->

    <BoolTrigger Condition="hero.IsDead" 
                 EnterAction="anmDeceleration.Stop();
                 anmMagnetSpeed.Stop();
                 anmElectricShockSpeed.Stop();
                 hero.Speed=0" 
                 Group="heroCondition"/>

    <BoolTrigger Condition="hero:Magneted"
                 EnterAction="hero:+Inertia;
                 anmDeceleration.Stop();
                 hero.SetTransaction(true,true,false)"
                 ExitAction="hero.EndTransaction()"
                 Group="heroCondition"/>

    <BoolTrigger Condition="hero:OnOilMotion" 
                 EnterAction="system.WriteLine('EnterOldMotion');
                 anmDeceleration.Pause();
                 hero.SetTransaction(true, true, false)" 
                 ExitAction="system.WriteLine('ExitOldMotion');
                 anmDeceleration.Resume();
                 hero.EndTransaction()" 
                 Group="heroCondition"/>

    <BoolTrigger Condition="hero:OnOilMotion and anmDeceleration.InProgress"
                 EnterAction="hero.Speed=120" />
    
    <BoolTrigger Condition="hero:Magneting" EnterAction="anmMagnetSpeed.Start()" ExitAction="anmMagnetSpeed.Stop()" Group="heroSpeedAnm"/>
    <BoolTrigger Condition="hero:sttElecticShock" EnterAction="anmElectricShockSpeed.Start()" Group="heroSpeedAnm"/>
    <BoolTrigger Condition="system:left" EnterAction="anmDeceleration.Start();@heroLastDirection=1" Group="heroSpeedAnm"/>
	<BoolTrigger Condition="system:right" EnterAction="anmDeceleration.Start();@heroLastDirection=2"  Group="heroSpeedAnm"/>
	<BoolTrigger Condition="system:up" EnterAction="anmDeceleration.Start();@heroLastDirection=3"  Group="heroSpeedAnm"/>
	<BoolTrigger Condition="system:down" EnterAction="anmDeceleration.Start();@heroLastDirection=4"  Group="heroSpeedAnm"/>
	
	<!-- Inertia -->
    <BoolTrigger Condition="hero:stick" EnterAction="anmDeceleration.Stop();anmMagnetSpeed.Stop();anmOnOilSpeed.Stop();hero:-Inertia" />
	<BoolTrigger Condition="not hero:Magneted and hero:Inertia" EnterAction="hero:-Inertia;anmDeceleration.Start();system.WriteLine('- - - Inertia - - -')" />
	
	<!-- tonneling with magnet pole 
    <BoolTrigger Condition="hero:stick and hero:Magneted" EnterAction="hero:+Tunneling" />
	<BoolTrigger Condition="not hero:stick and hero:Tunneling" EnterAction="hero:-Tunneling" />
    -->
    
    <!-- avoid tunneling 
    <Do Action="@heroTunnelngX=0;@heroTunnelngY=0" />
    <BoolTrigger Condition="hero:Tunneling" Action="hero.X=hero.X+@heroTunnelngX;hero.Y=hero.Y+@heroTunnelngY"/>
    -->
    
    <!-- hero speed animation (old)    
	<NumAnimation Id="anmDeceleration" Target="this.Speed" IsDelta="false" RepeatCount="1" Fill="End">
        <KeyFrame Time="0" Value="@heroSpeed1" Smoothing="Smooth"/>
        <KeyFrame Time="@heroTime1" Value="@heroSpeed2" Smoothing="Smooth"/>
        <KeyFrame Time="@heroTime2" Value="@heroSpeed3" Smoothing="Smooth"/>
        <KeyFrame Time="@heroTime3" Value="@heroSpeed4" Smoothing="Smooth"/>
        <KeyFrame Time="@heroTime4" Value="0" Smoothing="Smooth"/>
    </NumAnimation>-->

	<NumAnimation Id="anmDeceleration" Target="this.Speed" IsDelta="false" RepeatCount="1" Fill="End">
        <KeyFrame Time="0" Value="60" Smoothing="Smooth"/>
        <KeyFrame Time="0.1975" Value="132" Smoothing="Smooth"/>
        <KeyFrame Time="0.395" Value="120" Smoothing="Smooth"/>
        <KeyFrame Time="1.975" Value="60" Smoothing="Smooth"/>
        <KeyFrame Time="3.95" Value="0" Smoothing="Smooth"/>
    </NumAnimation>	
	

	<!-- hero speed electric shock animation -->
    <NumAnimation Id="anmElectricShockSpeed" Target="this.Speed" IsDelta="false" RepeatCount="1" Fill="End">
        <KeyFrame Time="0" Value="60" Smoothing="Smooth"/>
        <KeyFrame Time="0.5" Value="200" Smoothing="Smooth"/>
        <KeyFrame Time="1" Value="0" Smoothing="Smooth"/>
    </NumAnimation>
    
	<!-- hero magneted by radar animation -->
    <NumAnimation Id="anmMagnetSpeed" Target="this.Speed" IsDelta="false" RepeatCount="1" Fill="End">
        <KeyFrame Time="0" Value="60" Smoothing="Smooth"/>
        <KeyFrame Time="0.5" Value="1000" Smoothing="Smooth"/>
        <KeyFrame Time="1" Value="2000" Smoothing="Smooth"/>
        <KeyFrame Time="3" Value="2000" Smoothing="Smooth"/>
        <KeyFrame Time="5" Value="0" Smoothing="Smooth"/>
    </NumAnimation>

    <!-- hero on oil spped animation -->
    <SequenceSet Id="anmOnOilSpeed" RepeatCoun="1" InProgress="false">
    <NumAnimation Target="this.Speed" From="60" To="120" Duration="0.5" IsDelta="false" RepeatCount="1" Fill="End"/>
    <NumAnimation Target="this.Speed" IsDelta="false" RepeatCount="1" Fill="End">
        <KeyFrame Time="0" Value="120"/>
        <KeyFrame Time="3" Value="600"/>
        <KeyFrame Time="5" Value="0"/>
    </NumAnimation>
    </SequenceSet>


    <!-- ** Animation parameters adjustment. Need to remove this at some point. ** 
    <BoolTrigger Condition="system:heroSpeedRecalculate">
		<BoolTrigger Condition="system:heroReduceSpeed" Action="@heroBaseSpeed=@heroBaseSpeed-5"/>
		<BoolTrigger Condition="system:heroIncreaseSpeed" Action="@heroBaseSpeed=@heroBaseSpeed+5"/>
		<BoolTrigger Condition="system:heroReduceTime" Action="@heroBaseTime=@heroBaseTime-0.5"/>
		<BoolTrigger Condition="system:heroIncreaseTime" Action="@heroBaseTime=@heroBaseTime+0.5"/>
		<BoolTrigger Condition="this:InBoloto" Action="doBolotoSpeed.Start()"/>
		<BoolTrigger Condition="not this:InBoloto" Action="doNormalSpeed.Start()"/>
	</BoolTrigger>
	-->
</Include>













